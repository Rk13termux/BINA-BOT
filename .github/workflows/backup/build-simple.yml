name: Build BINA-BOT APK & EXE

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release

jobs:
  # Job para compilar APK Android
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: 📱 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: true

    - name: 🔍 Verify Flutter installation
      run: flutter doctor -v

    - name: 📦 Get Flutter dependencies
      run: flutter pub get

    - name: 🧹 Clean project
      run: flutter clean

    - name: 📦 Get dependencies again
      run: flutter pub get

    - name: � Analyze code
      run: flutter analyze --no-fatal-infos
      continue-on-error: true

    - name: �🔨 Build APK (Debug)
      if: github.event.inputs.build_type == 'debug' || contains(github.ref, 'develop')
      run: flutter build apk --debug

    - name: 🚀 Build APK (Release)
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      run: flutter build apk --release

    - name: 🏷️ Get version
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: 📤 Upload Debug APK
      if: github.event.inputs.build_type == 'debug' || contains(github.ref, 'develop')
      uses: actions/upload-artifact@v4
      with:
        name: bina-bot-debug-apk-v${{ steps.version.outputs.version }}
        path: build/app/outputs/flutter-apk/app-debug.apk

    - name: 📤 Upload Release APK
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: bina-bot-release-apk-v${{ steps.version.outputs.version }}
        path: build/app/outputs/flutter-apk/app-release.apk

  # Job para compilar EXE Windows
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4

    - name: 📱 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: true

    - name: 🔍 Verify Flutter installation
      run: flutter doctor -v

    - name: 📦 Get Flutter dependencies
      run: flutter pub get

    - name: 🧹 Clean project
      run: flutter clean

    - name: 📦 Get dependencies again
      run: flutter pub get

    - name: � Analyze code
      run: flutter analyze --no-fatal-infos
      continue-on-error: true

    - name: �🖥️ Enable Windows desktop
      run: flutter config --enable-windows-desktop

    - name: 🔨 Build Windows EXE (Debug)
      if: github.event.inputs.build_type == 'debug' || contains(github.ref, 'develop')
      run: flutter build windows --debug

    - name: 🚀 Build Windows EXE (Release)
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      run: flutter build windows --release

    - name: 🏷️ Get version
      id: version
      shell: powershell
      run: |
        $version = (Select-String -Path "pubspec.yaml" -Pattern "version:").Line.Split(" ")[1]
        Write-Output "version=$version" >> $env:GITHUB_OUTPUT

    - name: 📁 Create Windows Release Package
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      shell: powershell
      run: |
        $sourcePath = "build\windows\x64\runner\Release"
        $destPath = "bina-bot-windows-v${{ steps.version.outputs.version }}"
        Copy-Item -Path $sourcePath -Destination $destPath -Recurse
        Compress-Archive -Path $destPath -DestinationPath "$destPath.zip"

    - name: 📁 Create Windows Debug Package
      if: github.event.inputs.build_type == 'debug' || contains(github.ref, 'develop')
      shell: powershell
      run: |
        $sourcePath = "build\windows\x64\runner\Debug"
        $destPath = "bina-bot-windows-debug-v${{ steps.version.outputs.version }}"
        Copy-Item -Path $sourcePath -Destination $destPath -Recurse
        Compress-Archive -Path $destPath -DestinationPath "$destPath.zip"

    - name: 📤 Upload Windows Release
      if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: bina-bot-windows-v${{ steps.version.outputs.version }}
        path: bina-bot-windows-v${{ steps.version.outputs.version }}.zip

    - name: 📤 Upload Windows Debug
      if: github.event.inputs.build_type == 'debug' || contains(github.ref, 'develop')
      uses: actions/upload-artifact@v4
      with:
        name: bina-bot-windows-debug-v${{ steps.version.outputs.version }}
        path: bina-bot-windows-debug-v${{ steps.version.outputs.version }}.zip

  # Job para crear release automático
  create-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📁 Checkout repository
      uses: actions/checkout@v4

    - name: 🏷️ Get version
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: 📥 Download Android APK
      uses: actions/download-artifact@v4
      with:
        name: bina-bot-release-apk-v${{ steps.version.outputs.version }}

    - name: 📥 Download Windows EXE
      uses: actions/download-artifact@v4
      with:
        name: bina-bot-windows-v${{ steps.version.outputs.version }}

    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: BINA-BOT v${{ steps.version.outputs.version }}
        body: |
          🚀 **BINA-BOT v${{ steps.version.outputs.version }}**
          
          ### 📱 Download Links:
          - **Android APK**: `app-release.apk`
          - **Windows EXE**: `bina-bot-windows-v${{ steps.version.outputs.version }}.zip`
          
          ### ✨ Features:
          - Professional cryptocurrency trading platform
          - Real-time market data and analysis
          - Advanced news scraping and filtering
          - Technical indicators and charts
          - Portfolio tracking and alerts
          - Multi-platform support (Android, Windows)
          
          ### 🔧 Installation:
          - **Android**: Install the APK file
          - **Windows**: Extract ZIP and run the executable
          
          ---
          Built with ❤️ using Flutter & GitHub Actions
        files: |
          app-release.apk
          bina-bot-windows-v${{ steps.version.outputs.version }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
