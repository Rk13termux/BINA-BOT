name: Build Invictus Trader Pro (APK & EXE)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        
    - name: Flutter Dependencies
      run: flutter pub get

    - name: Crear archivo .env para la build
      run: |
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" > .env

    - name: Crear archivo .env para la build
      run: |
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" > .env
      
    - name: Fix XML Files (Android 14 Compatibility)
      run: |
        # Create backup_rules.xml
        cat > android/app/src/main/res/xml/backup_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <full-backup-content>
            <include domain="sharedpref" path="." />
            <include domain="file" path="." />
            <include domain="database" path="." />
            <exclude domain="file" path="no_backup/" />
            <exclude domain="sharedpref" path="secure_prefs.xml" />
            <exclude domain="database" path="secure.db" />
            <exclude domain="database" path="api_keys.db" />
        </full-backup-content>
        EOF
        
        # Create data_extraction_rules.xml
        cat > android/app/src/main/res/xml/data_extraction_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <data-extraction-rules>
            <cloud-backup>
                <include domain="file" path="." />
                <include domain="sharedpref" path="." />
                <exclude domain="file" path="no_backup/" />
                <exclude domain="sharedpref" path="secure_prefs.xml" />
            </cloud-backup>
            <device-transfer>
                <include domain="file" path="." />
                <include domain="sharedpref" path="." />
                <exclude domain="file" path="no_backup/" />
                <exclude domain="sharedpref" path="secure_prefs.xml" />
            </device-transfer>
        </data-extraction-rules>
        EOF
        
        # Create network_security_config.xml
        cat > android/app/src/main/res/xml/network_security_config.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <network-security-config>
            <domain-config cleartextTrafficPermitted="true">
                <domain includeSubdomains="true">api.binance.com</domain>
                <domain includeSubdomains="true">stream.binance.com</domain>
                <domain includeSubdomains="true">api.binance.us</domain>
                <domain includeSubdomains="true">stream.binance.us</domain>
                <domain includeSubdomains="true">fapi.binance.com</domain>
                <domain includeSubdomains="true">dapi.binance.com</domain>
                <domain includeSubdomains="true">stream.binancefuture.com</domain>
            </domain-config>
            <base-config cleartextTrafficPermitted="false">
                <trust-anchors>
                    <certificates src="system"/>
                </trust-anchors>
            </base-config>
        </network-security-config>
        EOF
        
        # Verify XML files
        echo "Verifying XML files..."
        ls -la android/app/src/main/res/xml/
        file android/app/src/main/res/xml/*.xml
      
    - name: Build APK (Release)
      if: github.event.inputs.build_type != 'debug'
      run: flutter build apk --release --target-platform android-arm64
        
    - name: Build APK (Debug)
      if: github.event.inputs.build_type == 'debug'
      run: flutter build apk --debug --target-platform android-arm64
        
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: invictus-trader-android-apk
        path: build/app/outputs/flutter-apk/*.apk
        retention-days: 30

  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        
    - name: Enable Windows Desktop
      run: flutter config --enable-windows-desktop
      
    - name: Flutter Dependencies
      run: flutter pub get
      
    - name: Build Windows (Release)
      if: github.event.inputs.build_type != 'debug'
      run: flutter build windows --release
        
    - name: Build Windows (Debug)
      if: github.event.inputs.build_type == 'debug'
      run: flutter build windows --debug
      
    - name: Create Windows ZIP
      run: |
        cd build/windows/x64/runner
        if ('${{ github.event.inputs.build_type }}' -eq 'debug') {
          Compress-Archive -Path Debug/* -DestinationPath invictus-trader-windows-debug.zip
        } else {
          Compress-Archive -Path Release/* -DestinationPath invictus-trader-windows-release.zip
        }
        
    - name: Upload Windows EXE
      uses: actions/upload-artifact@v4
      with:
        name: invictus-trader-windows-exe
        path: build/windows/x64/runner/*.zip
        retention-days: 30
